---
name: CI

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  schedule:
    - cron: "30 8 * * 3"

jobs:
  linter:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  functional-tests:
    name: Functional Tests
    runs-on: ubuntu-latest
    environment: Testing Ground
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Store private_key
        shell: bash
        env:
          ID_RSA: ${{ secrets.GH_KEY }}
        run: |
          mkdir -p ~/.ssh && 
          chmod 700 ~/.ssh && 
          echo "${ID_RSA}" > ~/.ssh/id_rsa && 
          chmod 600 ~/.ssh/id_rsa &&
          ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null
      - name: Clone public repos for user (dryrun)
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          mkdir tmp
          (cd tmp && ../github-clone.sh public --type users --name ckaserer --ghtoken ${GH_TOKEN} --dryrun)
          rm -rf tmp
      - name: Clone public repos for user
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          mkdir tmp
          (cd tmp && ../github-clone.sh public --type users --name ckaserer --ghtoken ${GH_TOKEN})
          rm -rf tmp
      - name: Clone public repos for org
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          mkdir tmp
          (cd tmp && ../github-clone.sh public --type orgs --name gepardec --ghtoken ${GH_TOKEN})
          rm -rf tmp
      - name: Clone all owned repos
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          mkdir tmp
          (cd tmp && ../github-clone.sh authenticated --ghtoken ${GH_TOKEN} --affiliation owner)
          rm -rf tmp
      - name: Clone all owned repos matching a filter
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          mkdir tmp
          (cd tmp && ../github-clone.sh authenticated --ghtoken ${GH_TOKEN} --affiliation owner --filter ansible)
          rm -rf tmp
  merge:
    name: Merge to main
    runs-on: ubuntu-latest
    needs: 
      - linter
      - functional-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          branch: main
...